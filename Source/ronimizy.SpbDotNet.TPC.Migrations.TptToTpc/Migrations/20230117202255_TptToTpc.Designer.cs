// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ronimizy.SpbDotNet.TPC.Migrations.TptToTpc;

#nullable disable

namespace ronimizy.SpbDotNet.TPC.Migrations.TptToTpc.Migrations
{
    [DbContext(typeof(TptToTpcMigrationContext))]
    [Migration("20230117202255_TptToTpc")]
    partial class TptToTpc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ProjectClients", b =>
                {
                    b.Property<Guid>("ClientsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectsId")
                        .HasColumnType("uuid");

                    b.HasKey("ClientsId", "ProjectsId");

                    b.HasIndex("ProjectsId");

                    b.ToTable("ProjectClients");
                });

            modelBuilder.Entity("ProjectItemSupervisors", b =>
                {
                    b.Property<Guid>("SupervisedItemsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SupervisorsId")
                        .HasColumnType("uuid");

                    b.HasKey("SupervisedItemsId", "SupervisorsId");

                    b.HasIndex("SupervisorsId");

                    b.ToTable("ProjectItemSupervisors");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.EmployeeUniform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ManagerId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.HasIndex("UserId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ProjectId");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Projects.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.CasualEmployeeUniform", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.EmployeeUniform");

                    b.Property<bool>("HoodieAllowed")
                        .HasColumnType("boolean");

                    b.Property<int>("JeansColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("JeansMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("JeansName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ShirtColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("ShirtMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("ShirtName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ShoesColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("ShoesMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("ShoesName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("CasualEmployeeUniform");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.DisplayEmployeeUniform", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.EmployeeUniform");

                    b.Property<int>("DisplayBeltColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("DisplayBeltMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayBeltName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DisplayShirtColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("DisplayShirtMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayShirtName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DisplayShoeColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("DisplayShoeMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayShoeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DisplayTieColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("DisplayTieMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("DisplayTieName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TuxedoColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("TuxedoMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("TuxedoName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("DisplayEmployeeUniform");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.OfficialEmployeeUniform", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.EmployeeUniforms.EmployeeUniform");

                    b.Property<int>("JacketColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("JacketMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("JacketName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfficialPantsColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("OfficialPantsMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("OfficialPantsName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfficialShirtColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("OfficialShirtMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("OfficialShirtName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfficialShoesColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("OfficialShoesMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("OfficialShoesName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("OfficialTieColorArgb")
                        .HasColumnType("integer");

                    b.Property<int>("OfficialTieMostPopularSize")
                        .HasColumnType("integer");

                    b.Property<string>("OfficialTieName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("OfficialEmployeeUniform");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Manager", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.Employees.Employee");

                    b.ToTable("Manager");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Subordinate", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.Employees.Employee");

                    b.ToTable("Subordinate");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectStage", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectItem");

                    b.ToTable("ProjectStage");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectTask", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectItem");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("ExecutorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasIndex("ExecutorId");

                    b.ToTable("ProjectTask");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Intern", b =>
                {
                    b.HasBaseType("ronimizy.SpbDotNet.TPC.Model.Employees.Subordinate");

                    b.Property<DateTime>("InternshipExpiration")
                        .HasColumnType("timestamp with time zone");

                    b.ToTable("Intern");
                });

            modelBuilder.Entity("ProjectClients", b =>
                {
                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Employees.Employee", null)
                        .WithMany()
                        .HasForeignKey("ClientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Projects.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectItemSupervisors", b =>
                {
                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectItem", null)
                        .WithMany()
                        .HasForeignKey("SupervisedItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Employees.Employee", null)
                        .WithMany()
                        .HasForeignKey("SupervisorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Employee", b =>
                {
                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Employees.Manager", "Manager")
                        .WithMany("Employees")
                        .HasForeignKey("ManagerId");

                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectItem", b =>
                {
                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectStage", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Projects.Project", "Project")
                        .WithMany("Items")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectTask", b =>
                {
                    b.HasOne("ronimizy.SpbDotNet.TPC.Model.Employees.Employee", "Executor")
                        .WithMany()
                        .HasForeignKey("ExecutorId");

                    b.Navigation("Executor");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Projects.Project", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.Employees.Manager", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("ronimizy.SpbDotNet.TPC.Model.ProjectItems.ProjectStage", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
